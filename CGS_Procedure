DROP PROCEDURE IF EXISTS edpclmlz.PROC_CLM_WDS_DENTAL_DTL_LOAD;
CREATE PROCEDURE edpclmlz.`PROC_CLM_WDS_DENTAL_DTL_LOAD`(IN in_StartTime VARCHAR(15))
BEGIN
DECLARE START_TIME_SP TIMESTAMP;
DECLARE END_TIME_SP TIMESTAMP;
DECLARE FROM_TIME TIMESTAMP;
DECLARE TO_TIME TIMESTAMP;
DECLARE RUN_ID BIGINT;
DECLARE EXIT handler FOR SQLEXCEPTION
BEGIN
GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE,
@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
SELECT @full_error;
SELECT now() INTO END_TIME_SP;
END;
INSERT INTO SP_AUDIT_LOG_DTL VALUES( RUN_ID, 'PROC_CLM_WDS_DENTAL_DTL_LOAD',START_TIME_SP, END_TIME_SP,'FAILED',@full_error);

SET START_TIME_SP = STR_TO_DATE(in_StartTime,'%Y%m%d%H%i%s');
SELECT GetSequenceVal('863_DTL',1) INTO RUN_ID;
SELECT MAX(START_TIME) INTO FROM_TIME FROM SP_AUDIT_LOG_DTL WHERE PROC_NAME='PROC_CLM_WDS_DENTAL_DTL_LOAD' AND RUN_STATUS='SUCCESS';
SET TO_TIME = STR_TO_DATE(in_StartTime,'%Y%m%d%H%i%s');
 
 
TRUNCATE TABLE edpclmlz.WDS_DNTL_DTL_TEMP;
INSERT INTO edpclmlz.WDS_DNTL_DTL_TEMP
SELECT CLM_EVNT_KEY,EHUB_PROVIDER_STAT FROM  (
SELECT CLM_EVNT_KEY,CASE WHEN EHUB_PROVIDER_STAT=2 THEN 'N' ELSE 'Y' END as EHUB_PROVIDER_STAT FROM
edpclmlz.EDP_CLM_WDS_DNTL_HDR_CL WHERE EHUB_CLAIM_GEN_IND ='C' AND UPDATED_DTTM > FROM_TIME AND UPDATED_DTTM <=TO_TIME) as TEMP_DTL_TBL GROUP BY CLM_EVNT_KEY;
 
 
TRUNCATE TABLE edpclmlz.EDP_CLM_WDS_DNTL_DTL_DRVD_CL;
INSERT INTO edpclmlz.EDP_CLM_WDS_DNTL_DTL_DRVD_CL
SELECT
D.CLM_EVNT_KEY as CLM_EVNT_KEY,
EHUB_PROC_LINE_NO as CLM_LINE_ID,
CONCAT(SOR_CD,EHUB_LN_CLAIM_NO,EHUB_LN_CLAIM_GENERATION) as CLM_UID,
'863' as SOR_CD,
CAST(EHUB_SERVICE_DATE AS DATE) as SRVC_STRT_DT,
CAST(EHUB_SERVICE_DATE AS DATE) as SRVC_END_DT,
CASE WHEN EHUB_CHARGED_FEE='' OR EHUB_CHARGED_FEE IS NULL THEN 0 ELSE CAST(EHUB_CHARGED_FEE AS DECIMAL(18,2)) END as BILLD_CHRG_AMT,
CASE WHEN EHUB_COIN_AMT='' OR EHUB_COIN_AMT IS NULL THEN 0 ELSE CAST(EHUB_COIN_AMT AS DECIMAL(18,2)) END as COINSRN_AMT,
CASE WHEN EHUB_COPAY_AMT_ONLY='' OR EHUB_COPAY_AMT_ONLY IS NULL THEN 0 ELSE CAST(EHUB_COPAY_AMT_ONLY AS DECIMAL(18,2)) END as CPAYMNT_AMT,
CASE WHEN EHUB_DED_AMT='' OR EHUB_DED_AMT IS NULL THEN 0 ELSE CAST(EHUB_DED_AMT AS DECIMAL(18,2)) END as DDCTBL_AMT,
CASE WHEN EHUB_EXCLUDED_AMT='' OR EHUB_EXCLUDED_AMT IS NULL THEN 0 ELSE CAST(EHUB_EXCLUDED_AMT AS DECIMAL(18,2)) END as NON_CVRD_AMT,
CASE WHEN EHUB_COVERED_FEE='' OR EHUB_COVERED_FEE IS NULL THEN 0 ELSE CAST(EHUB_COVERED_FEE AS DECIMAL(18,2)) END as ALWD_AMT,
CASE WHEN EHUB_PAID_AMT='' OR EHUB_PAID_AMT IS NULL THEN 0 ELSE CAST(EHUB_PAID_AMT AS DECIMAL(18,2)) END as PAID_AMT,
CASE WHEN EHUB_PATIENT_OWES='' OR EHUB_PATIENT_OWES IS NULL THEN 0 ELSE CAST(EHUB_PATIENT_OWES AS DECIMAL(18,2)) END as MBR_RSPNSBLY_AMT,
CASE WHEN UPPER(EHUB_PROVIDER_STAT)= 'Y' THEN CAST(EHUB_NETWORK_SAVINGS AS DECIMAL(18,2)) WHEN UPPER(EHUB_PROVIDER_STAT)= 'N' THEN 0 END as PROV_RSPNSBLY_AMT,
 
CASE 
WHEN EHUB_ALT_PROC_CD != 0 AND EHUB_ALT_PROC_CD != '' THEN 
CASE 
WHEN EHUB_ALT_PROC_CD > 9999 THEN substr(trim(EHUB_ALT_PROC_CD),1,5)
ELSE concat('D',substr(trim(10000 + EHUB_ALT_PROC_CD),2,4)) end 
ELSE 
CASE  
WHEN EHUB_PROC_CD = 0 AND EHUB_PROC_CD = '' THEN 'UNK' 
WHEN EHUB_PROC_CD > 9999 THEN substr(trim(EHUB_PROC_CD),1,5)
ELSE concat('D',substr(trim(10000 + EHUB_PROC_CD),2,4)) end
END as HLTH_SRVC_CD,
 
CASE WHEN UPPER(EHUB_PROVIDER_STAT)= 'Y' THEN CAST(EHUB_NETWORK_SAVINGS AS DECIMAL(18,2)) + CAST(EHUB_PAID_AMT AS DECIMAL(18,2)) WHEN UPPER(EHUB_PROVIDER_STAT)= 'N' THEN CAST(EHUB_PAID_AMT AS DECIMAL(18,2)) END as PLAN_SVNGS_AMT,
 
'N' as SMRY_PRCSD_CLM_LINE_IND,
TEMP2.RORDR_CLM_LINE_ID_NBR as RORDR_CLM_LINE_ID_NBR,
 
EHUB_TEETH as TOOTH_SRFC_CD,
EHUB_TEETH as TOOTH_STRT_RNG_NBR,
EHUB_TEETH as TOOTH_END_RNG_NBR,
 
   
CONCAT_WS('','[{"srvcExplntnSqncNbr" : 1,"srvcExplntnAmt" : 0 ,"srvcExplntnCd" : "',(CASE WHEN EHUB_MAP_POLICY_CD='' OR EHUB_MAP_POLICY_CD=NULL THEN 'UNK' ELSE EHUB_MAP_POLICY_CD END),'","rjctDt" : null}]','') AS SRVC_EXPLTN_DTL_TXT,
HD.HLTH_SRVC_TYPE_CD,
SYSDATE() as CREATED_ON
 
FROM edpclmlz.EDP_CLM_WDS_DNTL_DTL_CL D
LEFT OUTER JOIN WDS_DNTL_DTL_TEMP T ON  D.CLM_EVNT_KEY = T.CLM_EVNT_KEY
LEFT OUTER JOIN ( select distinct HLTH_SRVC_CD,HLTH_SRVC_TYPE_CD from edpclmlz.EDP_RDM_HEALTH_SRVC_CODE WHERE HLTH_SRVC_TYPE_CD IN ('ADA','HG863') )HD
ON concat('D',substr(trim(10000 + EHUB_PROC_CD),2,4))  = HD.HLTH_SRVC_CD
LEFT OUTER JOIN (SELECT
@row_number:=CASE WHEN @CLM_KEY=CLM_EVNT_KEY THEN @row_number + 1 ELSE 1 END AS RORDR_CLM_LINE_ID_NBR,
@CLM_KEY:=CLM_EVNT_KEY CLM_EVNT_KEY,
EHUB_PROC_LINE_NO as CLM_LINE_ID
FROM edpclmlz.EDP_CLM_WDS_DNTL_DTL_CL
ORDER BY CLM_EVNT_KEY, CAST(EHUB_PROC_LINE_NO AS UNSIGNED)) TEMP2
ON D.CLM_EVNT_KEY = TEMP2.CLM_EVNT_KEY  AND D.EHUB_PROC_LINE_NO = TEMP2.CLM_LINE_ID
WHERE EHUB_LN_CLAIM_GEN_IND ='C'AND UPDATED_DTTM > FROM_TIME AND UPDATED_DTTM <=TO_TIME
ORDER BY D.CLM_EVNT_KEY, D.EHUB_PROC_LINE_NO;
 
INSERT INTO edpclmlz.EDP_CLM_WDS_DNTL_DTL_DRVD
 
Select * from edpclmlz.EDP_CLM_WDS_DNTL_DTL_DRVD_CL;
 
 
SELECT  Now() INTO END_TIME_SP;
INSERT INTO SP_AUDIT_LOG_DTL VALUES( RUN_ID, 'PROC_CLM_WDS_DENTAL_DTL_LOAD',START_TIME_SP, END_TIME_SP,'SUCCESS',NULL);
END;



